KDE Screen Autorotation Setup Instructions
==========================================

This document explains how to set up automatic screen rotation on KDE desktop environment,
similar to GNOME's Screen Rotate extension functionality.

PREREQUISITES
=============
- KDE desktop environment
- Accelerometer sensor (iio-sensor-proxy service running)
- kscreen-doctor utility available
- bc calculator installed

VERIFICATION STEPS
==================

1. Check if accelerometer is available:
   $ ls /sys/bus/iio/devices/
   $ cat /sys/bus/iio/devices/iio:device0/name

2. Verify iio-sensor-proxy is running:
   $ systemctl status iio-sensor-proxy

3. Check kscreen-doctor is available:
   $ which kscreen-doctor
   $ kscreen-doctor -o

4. Verify bc calculator:
   $ which bc

SCRIPT CREATION
===============

Create the autorotation script at ~/.local/bin/kde-autorotate:

#!/bin/bash

# KDE Auto-rotation script
# Monitors accelerometer and rotates screen based on device orientation
# Similar to GNOME's Screen Rotate extension with orientation offset

# Configuration
ACCEL_DEVICE="/sys/bus/iio/devices/iio:device0"
SCALE=$(cat "$ACCEL_DEVICE/in_accel_scale")
THRESHOLD=0.5  # Sensitivity threshold for rotation detection
ORIENTATION_OFFSET=0  # No offset - direct accelerometer reading
CURRENT_ROTATION=""
DISPLAY_NAME="DSI-1"  # Your display name from kscreen-doctor

# Function to get current rotation value
get_current_rotation() {
    kscreen-doctor -o | grep "Rotation:" | awk '{print $2}'
}

# Function to set rotation
set_rotation() {
    local rotation=$1
    kscreen-doctor "output.$DISPLAY_NAME.rotation.$rotation" >/dev/null 2>&1
}

# Function to read accelerometer values
read_accelerometer() {
    local x_raw=$(cat "$ACCEL_DEVICE/in_accel_x_raw")
    local y_raw=$(cat "$ACCEL_DEVICE/in_accel_y_raw")
    local z_raw=$(cat "$ACCEL_DEVICE/in_accel_z_raw")
    
    # Convert to actual values using scale
    local x=$(echo "$x_raw * $SCALE" | bc -l)
    local y=$(echo "$y_raw * $SCALE" | bc -l)
    local z=$(echo "$z_raw * $SCALE" | bc -l)
    
    echo "$x $y $z"
}

# Function to determine orientation
determine_orientation() {
    local x=$1
    local y=$2
    local z=$3
    
    # Apply orientation offset (similar to GNOME's setting)
    if [ "$ORIENTATION_OFFSET" = "1" ]; then
        # Offset by 90 degrees clockwise
        local temp=$x
        x=$y
        y=$(echo "-$temp" | bc -l)
    elif [ "$ORIENTATION_OFFSET" = "2" ]; then
        # Offset by 180 degrees
        x=$(echo "-1 * $x" | bc -l)
        y=$(echo "-1 * $y" | bc -l)
    elif [ "$ORIENTATION_OFFSET" = "3" ]; then
        # Offset by 90 degrees counter-clockwise
        local temp=$x
        x=$(echo "-1 * $y" | bc -l)
        y=$temp
    fi
    
    # Determine orientation based on accelerometer values
    local x_gt_threshold=$(echo "$x > $THRESHOLD" | bc -l)
    local x_lt_neg_threshold=$(echo "$x < -$THRESHOLD" | bc -l)
    local y_gt_threshold=$(echo "$y > $THRESHOLD" | bc -l)
    local y_lt_neg_threshold=$(echo "$y < -$THRESHOLD" | bc -l)
    
    if [ "$x_gt_threshold" = "1" ]; then
        echo "left"
    elif [ "$x_lt_neg_threshold" = "1" ]; then
        echo "right"
    elif [ "$y_gt_threshold" = "1" ]; then
        echo "inverted"
    elif [ "$y_lt_neg_threshold" = "1" ]; then
        echo "none"
    else
        echo "none"  # Default to normal orientation
    fi
}

# Main loop
echo "KDE Auto-rotation started. Press Ctrl+C to stop."
echo "Monitoring accelerometer: $ACCEL_DEVICE"
echo "Display: $DISPLAY_NAME"
echo "Orientation offset: $ORIENTATION_OFFSET"
echo "Threshold: $THRESHOLD"
echo ""

while true; do
    # Read accelerometer values
    read x y z <<< $(read_accelerometer)
    
    # Determine orientation
    orientation=$(determine_orientation "$x" "$y" "$z")
    
    # Only change rotation if orientation has changed
    if [ "$orientation" != "$CURRENT_ROTATION" ]; then
        echo "$(date): Rotating to $orientation (x=$x, y=$y, z=$z)"
        set_rotation "$orientation"
        CURRENT_ROTATION="$orientation"
    fi
    
    # Sleep for a short interval
    sleep 0.5
done

SYSTEMD SERVICE SETUP
=====================

1. Make script executable:
   $ chmod +x ~/.local/bin/kde-autorotate

2. Create systemd user service directory:
   $ mkdir -p ~/.config/systemd/user

3. Create service file at ~/.config/systemd/user/kde-autorotate.service:

[Unit]
Description=KDE Auto-rotation Service
After=graphical-session.target
Wants=graphical-session.target

[Service]
Type=simple
ExecStart=%h/.local/bin/kde-autorotate
Restart=always
RestartSec=5
Environment=DISPLAY=:0

[Install]
WantedBy=default.target

4. Enable and start the service:
   $ systemctl --user daemon-reload
   $ systemctl --user enable kde-autorotate.service
   $ systemctl --user start kde-autorotate.service

CONFIGURATION OPTIONS
=====================

Edit ~/.local/bin/kde-autorotate to adjust these parameters:

- ORIENTATION_OFFSET: 
  * 0 = No offset
  * 1 = 90 degrees clockwise
  * 2 = 180 degrees (fixes upside-down screen)
  * 3 = 90 degrees counter-clockwise

- THRESHOLD: Sensitivity for rotation detection (default: 0.5)
- DISPLAY_NAME: Your display name (check with kscreen-doctor -o)

SERVICE MANAGEMENT
==================

Check status:
$ systemctl --user status kde-autorotate.service

Stop autorotation:
$ systemctl --user stop kde-autorotate.service

Start autorotation:
$ systemctl --user start kde-autorotate.service

Disable auto-start:
$ systemctl --user disable kde-autorotate.service

View logs:
$ journalctl --user -u kde-autorotate.service -f

TROUBLESHOOTING
===============

1. If horizontal rotations are wrong, swap X-axis mappings:
   - Change "right" to "left" and "left" to "right" in the orientation logic
2. If vertical orientations are upside down, swap Y-axis mappings:
   - Change "none" to "inverted" and "inverted" to "none" in the orientation logic
3. If no rotation occurs, check accelerometer readings:
   $ cat /sys/bus/iio/devices/iio:device0/in_accel_*_raw
4. Verify display name with: kscreen-doctor -o
5. Check service logs for errors: journalctl --user -u kde-autorotate.service

WORKING CONFIGURATION
=====================

The following configuration works correctly for this system:
- ORIENTATION_OFFSET=0 (no offset)
- X positive → "left" rotation
- X negative → "right" rotation  
- Y positive → "inverted" rotation
- Y negative → "none" rotation

NOTES
=====

- The script monitors accelerometer data every 0.5 seconds
- Only changes rotation when orientation actually changes
- Uses kscreen-doctor for screen rotation control
- Similar functionality to GNOME's Screen Rotate extension
- Works with KDE's kscreen framework

Created: $(date)
System: Fedora Linux with KDE Plasma
Accelerometer: mxc4005
Display: DSI-1